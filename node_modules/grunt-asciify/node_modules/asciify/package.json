{
  "name": "asciify",
  "version": "1.0.1",
  "description": "Plain text awesomizer. A hybrid npm module and CLI for turning plain text into ascii art.",
  "main": "index.js",
  "dependencies": {
    "optimist": "~0.3.5"
  },
  "devDependencies": {
    "tap": "~0.4.0"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "tap ./test"
  },
  "bin": {
    "asciify": "./bin/asciify.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/olizilla/asciify"
  },
  "keywords": [
    "ascii",
    "art",
    "figlet",
    "banner",
    "text"
  ],
  "author": {
    "name": "olizilla"
  },
  "readme": "ASCIIFY\n=======\n                                        __________________________  ______________\n                                        \\__    ___/\\_   _____/\\   \\/  /\\__    ___/\n    Takes text, awesomizes it, returns    |    |    |    __)_  \\     /   |    |   \n                                          |    |    |        \\ /     \\   |    |   \n                                          |____|   /_______  //___/\\  \\  |____|   \n                                                           \\/       \\_/           \n\nA hybrid npm module and CLI for turning plain text into ascii art. \nA pure JS figlet tool to make all your banners better.\n\n## Getting started\n\nInstall [Node.js](http://nodejs.org/)\n\nInstall asciify and gasp:\n    \n    npm install -g asciify\n\n    asciify \"Boom\" -f larry3d\n     ____                                   \n    /\\  _`\\                                 \n    \\ \\ \\L\\ \\    ___     ___     ___ ___    \n     \\ \\  _ <'  / __`\\  / __`\\ /' __` __`\\  \n      \\ \\ \\L\\ \\/\\ \\L\\ \\/\\ \\L\\ \\/\\ \\/\\ \\/\\ \\ \n       \\ \\____/\\ \\____/\\ \\____/\\ \\_\\ \\_\\ \\_\\\n        \\/___/  \\/___/  \\/___/  \\/_/\\/_/\\/_/\n                                        \n\nFor a really good time call:\n\n    asciify -a \"All The Fonts!\"\n\n\nOr use it as a node module:\n\n    asciify('Awesome', function(text){ console.log(text) });\n       _____                                                     \n      /  _  \\  __  _  __  ____    ______  ____    _____    ____  \n     /  /_\\  \\ \\ \\/ \\/ /_/ __ \\  /  ___/ /  _ \\  /     \\ _/ __ \\ \n    /    |    \\ \\     / \\  ___/  \\___ \\ (  <_> )|  Y Y  \\\\  ___/ \n    \\____|__  /  \\/\\_/   \\___  >/____  > \\____/ |__|_|  / \\___  >\n            \\/               \\/      \\/               \\/      \\/ \n\n\nAnd again with the font option:\n\n    asciify('Fonts?', {font:'3-d'}, function(text){ console.log(text));\n\n     ********                     **            **** \n    /**/////                     /**           **//**\n    /**        ******  *******  ******  ******/** /**\n    /*******  **////**//**///**///**/  **//// //  ** \n    /**////  /**   /** /**  /**  /**  //*****    **  \n    /**      /**   /** /**  /**  /**   /////**  //   \n    /**      //******  ***  /**  //**  ******    **  \n    //        //////  ///   //    //  //////    //   \n\n\n## Thanks to\n\n- [figlet-js][] which does the magic\n- [optimist][], smoothing the choppy waters of CLI argument parsing.\n- [node-tap][], robot friendly test codez, and all the wonders of npm.\n\n[figlet-js]: https://github.com/scottgonzalez/figlet-js\n[optimist]: https://github.com/substack/node-optimist\n[node-tap]: https://github.com/isaacs/node-tap\n",
  "readmeFilename": "README.md",
  "_id": "asciify@1.0.1",
  "dist": {
    "shasum": "07d2eac68bf874b1185996ceb4c2228686c15d1a"
  },
  "_from": "asciify@~1.0.1",
  "_resolved": "https://registry.npmjs.org/asciify/-/asciify-1.0.1.tgz"
}
